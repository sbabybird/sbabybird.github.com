<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI on Learning &amp; Writing！</title><link>https://sbabybird.github.io/tags/ai/</link><description>Recent content in AI on Learning &amp; Writing！</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 02 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://sbabybird.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>线性回归和梯度下降</title><link>https://sbabybird.github.io/p/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</link><pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate><guid>https://sbabybird.github.io/p/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%92%8C%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</guid><description>&lt;h3 id="有监督学习的两种主要任务分类和回归">有监督学习的两种主要任务（分类和回归）
&lt;/h3>&lt;ul>
&lt;li>有监督机器学习任务主要分为两种，一种是分类任务，一般是通过学习算法实现对未知数据的分类甄别，比如判断是男性还是女性，预测明天会不会下雨等等，预测结果是离散的分类。另一种是回归任务，用于预测一个具体的值，比如房价、年龄等等，预测结果是连续的值；&lt;/li>
&lt;li>解决回归任务比较常见的算法就是线性回归算法；&lt;/li>
&lt;/ul>
&lt;h3 id="线性回归">线性回归
&lt;/h3>&lt;ul>
&lt;li>线性回归是最典型的用于回归任务的机器学习算法。它的基本原理是基于，任意一个为n的值，可以通过一个n-1阶的多项式进行拟合；&lt;/li>
&lt;li>线性回归的算法的目标是根据已知标签数据，训练一个预测函数f(a, b)，使得x输入带入ax+b这样的多项式可以得出需要预测的值；&lt;/li>
&lt;li>所以目标是找到合适的a和b（从数学语言的精确描述来说，一般用别的符号代替，为了方便记录，我使用a和b）；&lt;/li>
&lt;li>为了找到合适的a和b，需要定义一个损失函数（也有称为代价函数的），J(a, b)，用于判断a和b是否合适，比较简单的有“方差均值”法；&lt;/li>
&lt;li>方差均值指的是，所有样本带入预测函数f，将预测值与实际值相减，取平方，求和再求平均数（暂时不知到markdown里如何加入公式）；&lt;/li>
&lt;li>那么带入损失函数，就是意味着，找到合适的a、b使得刚才那个方差均值小于一个阈值（接近最优）；&lt;/li>
&lt;li>线性回归本质上，是在平面坐标系里找到一个与样本匹配的直线，这样基于这个直线，即可预测未知的值；&lt;/li>
&lt;/ul>
&lt;h3 id="梯度下降">梯度下降
&lt;/h3>&lt;ul>
&lt;li>如何找到合适的a和b，一个一个地去试是不可能的（无穷多的计算量）；&lt;/li>
&lt;li>比较典型的算法是“梯度下降”，又是牛顿起的头；&lt;/li>
&lt;li>比较生动的描述是，想想一个三维空间图形，X和Y平面是有a和b的值构成，Z轴是损失函数的值，值最小的部分（在图上就最低的部分，像一个山谷）就是最优解；&lt;/li>
&lt;li>从山顶的某个点上，环顾360度，找到适合下山的一小步，一点一点儿走向山谷最低处，有点像慢慢走楼梯，所以叫梯度下降；&lt;/li>
&lt;li>从我的体会来看，这个方法有点像牛顿那个计算平方根的迭代法（根据一个猜测值，然后通过迭代公式寻找一个更加接近正确值的值，直到误差降低到合适范围）；&lt;/li>
&lt;li>从微积分的角度，就是找到损失函数J在最初尝试的那个点上的切线，并通过它的斜率（也就是导数值）乘以一个系数a，逐步逼近最低点（切线斜率为零）的过程；&lt;/li>
&lt;/ul></description></item><item><title>机器学习的学习准备</title><link>https://sbabybird.github.io/p/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%87%86%E5%A4%87/</link><pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate><guid>https://sbabybird.github.io/p/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%87%86%E5%A4%87/</guid><description>&lt;h3 id="机器学习的概念">机器学习的概念
&lt;/h3>&lt;p>机器学习是人工智能的一个分支，是近年来逐渐具备实用性的各种人工智能应用的基础。其本质是（我目前的个人理解）利用针对已知的数据集合抽取采样特征，然后利用某种数据模型（核心是某种算法：如kNN、SVM、朴素贝叶斯等）对数据进行计算处理，得到一组可以预测未知数据集特征的参数和手段，从而可以对数据进行预测判断的一种数据处理方法。&lt;/p>
&lt;h3 id="机器学习相关的名词">机器学习相关的名词
&lt;/h3>&lt;ul>
&lt;li>神经网络：是机器学习的一种实现方式，从概念上来说，小于“机器学习”，但是由于其在图像识别、语音识别、语言翻译等领域的优异表现，以至于现在提到机器学习就认为是神经网络，实际则不然，机器学习的概念更大，更加基础，是实现神经网络应用的基础理论和方法；&lt;/li>
&lt;li>深度学习：是神经网络的应用特例，同样是在应用层表现优异，可以理解为神经网络的一种实现；&lt;/li>
&lt;li>大数据：机器学习的数据处理基础支撑，近年来机器学习在应用层面表现较好主要得益于大数据技术的发展，可以使得模型训练内容量级增加，极大的提高了模型准确度；&lt;/li>
&lt;li>n维向量：来自线性代数，在机器学习中起到重要作用，在机器学习中一般用于各种特征数据的载体，在不同的算法过程中传递和计算。&lt;/li>
&lt;/ul>
&lt;h3 id="机器学习相关的工具">机器学习相关的工具
&lt;/h3>&lt;ul>
&lt;li>编程语言：目前比较流行的是Python，因为有比较丰富易用的程序包，很多科技公司也开源了较为成熟的框架，再加上Python语言本身的简单易上手，使得Python成为这个领域最流行的语言。当然C和C++、Java还是实现各种算法的根基，Python更多是提供了一种调用接口；&lt;/li>
&lt;li>iPython：Python语言的交互控制台，可以较为方便的测试、调试Python程序，有较强的交互功能，比语言发行版自带的强大；&lt;/li>
&lt;li>jupyter：提供Python语言的Web交互界面，通过网页即可编写代码，并及时反馈执行结果，由于是B/S架构，所以可以使得运行时跟开发环境分开。编辑界面同时支持基于Markdown语法的文档编写，使得“文学化”编程成为一种可能，非常适合用于科研人员的汇报材料或论文；&lt;/li>
&lt;li>TensorFlow：谷歌开源的机器学习框架，快速灵活部署机器学习应用，可以应用与大规模、工业级场景；&lt;/li>
&lt;li>keras：基于Python编写的高级神经网络API，属于对机器学习的深度封装，如果以学习机器学习原理为目标的，不建议使用，还是先手动将若干种核心算法实现一遍比较深刻；&lt;/li>
&lt;/ul>
&lt;h3 id="预期的学习方法">预期的学习方法
&lt;/h3>&lt;ol>
&lt;li>通过阅读相关的书籍，对于概念有所了解，这个过程可以是粗糙的浏览，不求详细的理解各种原理和算法；&lt;/li>
&lt;li>尝试一些教学视频，了解实操的基本流程，对于自己读书得到的概念进行验证，修订理解，并熟悉基本工具的使用（如Python的numpy、plot等）；&lt;/li>
&lt;li>细读书籍，按照书中的事例进行实操，并尝试推导算法的基本原理，理解后，形成自己的文字；&lt;/li>
&lt;li>定义简单的任务，贯穿数据准备、数据清洗、特征值提取、模型建立、模型应用各个阶段，一般来说可以是手写文字识别，或者给新闻文章分类等；&lt;/li>
&lt;li>循环和迭代这个过程，一边输入信息，一边将学到的东西结合思考，形成有效的输出（文字、视频等）；&lt;/li>
&lt;/ol></description></item></channel></rss>