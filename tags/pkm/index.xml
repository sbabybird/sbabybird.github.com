<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pkm on Learning &amp; Writing！</title><link>https://sbabybird.github.io/tags/pkm/</link><description>Recent content in Pkm on Learning &amp; Writing！</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 17 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sbabybird.github.io/tags/pkm/index.xml" rel="self" type="application/rss+xml"/><item><title>应以积累“套路”的思想来管理知识</title><link>https://sbabybird.github.io/p/%E5%BA%94%E4%BB%A5%E7%A7%AF%E7%B4%AF%E5%A5%97%E8%B7%AF%E7%9A%84%E6%80%9D%E6%83%B3%E6%9D%A5%E7%AE%A1%E7%90%86%E7%9F%A5%E8%AF%86/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://sbabybird.github.io/p/%E5%BA%94%E4%BB%A5%E7%A7%AF%E7%B4%AF%E5%A5%97%E8%B7%AF%E7%9A%84%E6%80%9D%E6%83%B3%E6%9D%A5%E7%AE%A1%E7%90%86%E7%9F%A5%E8%AF%86/</guid><description>&lt;img src="https://sbabybird.github.io/p/%E5%BA%94%E4%BB%A5%E7%A7%AF%E7%B4%AF%E5%A5%97%E8%B7%AF%E7%9A%84%E6%80%9D%E6%83%B3%E6%9D%A5%E7%AE%A1%E7%90%86%E7%9F%A5%E8%AF%86/2023-10-18-15-48-38.png" alt="Featured image of post 应以积累“套路”的思想来管理知识" />&lt;p>昨日想到，应以总结积累“套路”的思想来进行知识库的建设与管理。&lt;/p>
&lt;p>所谓“套路”即是人类利用某种技能解决某领域问题的最佳实践。&lt;/p>
&lt;p>比如下棋、打牌这些游戏，规则很容易学会，但想要下得赢，则必须要有套路、招数。&lt;/p>
&lt;p>电脑竞技游戏也是如此，比如拳皇、街霸，规则简单至极（击倒对方即获胜），但套路却很多，比如：择、立回、连段等等。&lt;/p>
&lt;p>编程领域更是如此，很多编程语言如果只是学习语法的话，很快就能掌握。但没有套路就什么事儿也办不了。&lt;/p>
&lt;p>于是才出现了各式各样将套路封装好的框架（Framework），比如 Java 的 Spring，Nodejs 的 Express，Python 的 Django 等等。&lt;/p>
&lt;p>所以在知识管理上，不必过于沉溺于追求“本质”、“原则”。多积累基础规则固然重要，但聪明人基于这些规则发明的套路也很关键。&lt;/p>
&lt;p>也就是说不用多囤积“大道理”，而是可以先从学习基于“大道理”所设计的一些动作套路，搞定一些应用再说。&lt;/p>
&lt;p>甚至某种程度上我们普通人更需要将套路作为第一层知识，先做到手中有剑。&lt;/p>
&lt;p>当然在熟练应用之后，也应追求“知其所以然”，方能做到施展时得心应手、“无招胜有招”。&lt;/p>
&lt;p>但是千万记住：无招是建立在对 N 种套路都烂熟于心的前提之上的。&lt;/p></description></item></channel></rss>